plugins {
    alias libs.plugins.android.library
    alias libs.plugins.kotlin.android
    alias libs.plugins.dokka
    alias libs.plugins.kotlin.kapt
    alias libs.plugins.kotlin.parcelize
}

def DEVELOPMENT_URL = System.properties['DEVELOPMENT_URL'] ?: '"http://10.0.2.2:3000/"'

android {
    namespace "com.braintreepayments.api.core"
    compileSdk rootProject.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion

        consumerProguardFiles 'proguard.pro'
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'

        buildConfigField "String", "VERSION_NAME", "\"${rootProject.versionName}\""
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
            all {
                jvmArgs '-noverify'
            }
        }
    }

    packagingOptions {
        exclude 'META-INF/maven/com.google.guava/guava/pom.properties'
        exclude 'META-INF/maven/com.google.guava/guava/pom.xml'
    }

    lintOptions {
        textReport true
        textOutput 'stdout'
    }

    compileOptions {
        sourceCompatibility versions.javaSourceCompatibility
        targetCompatibility versions.javaTargetCompatibility
    }
}


dependencies {
    implementation libs.androidx.appcompat
    implementation libs.androidx.work.runtime

    implementation libs.androidx.core.ktx
    implementation libs.kotlin.stdlib

    implementation libs.androidx.room.runtime

    // Ref: https://stackoverflow.com/a/51067251
    kapt libs.androidx.room.compiler

    api libs.browser.switch
    api project(':SharedUtils')

    androidTestImplementation libs.play.services.wallet
    androidTestImplementation libs.androidx.test.rules
    androidTestImplementation libs.androidx.test.runner
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.work.testing
    androidTestImplementation project(':Card')
    androidTestImplementation project(':PayPal')
    androidTestImplementation project(':TestUtils')

    testImplementation libs.androidx.work.testing
    testImplementation libs.robolectric
    testImplementation libs.androidx.test.core
    testImplementation libs.androidx.junit
    testImplementation libs.mockito.core
    testImplementation libs.json.assert
    testImplementation libs.mockk
    testImplementation libs.kotlin.test
    testImplementation project(':PayPal')
    testImplementation project(':TestUtils')
    testImplementation project(':Venmo')
    testImplementation project(':Card')

    // Ref: https://kotlin.github.io/dokka/1.8.0-SNAPSHOT/user_guide/applying/gradle/#applying-plugins
    dokkaHtmlPartialPlugin 'org.jetbrains.dokka:android-documentation-plugin:1.9.10'
}

android.buildTypes.each { type ->
    type.buildConfigField 'String', 'DEVELOPMENT_URL', DEVELOPMENT_URL
}

task runAllTests {
    /*
     * Empty task to run via command line Rakefile or ci.sh to indicate that tests that depend on
     * setting up external services (like the test invalid https server) are set up correctly.
     * Otherwise, these tests will be skipped
     */
}

gradle.taskGraph.whenReady { taskGraph ->
    def RUN_ALL_TESTS = taskGraph.hasTask(':Braintree:runAllTests')
    android.buildTypes.debug.buildConfigField('boolean', 'RUN_ALL_TESTS', '' + RUN_ALL_TESTS)
}

// region signing and publishing

project.ext.name = "braintree-core"
project.ext.pom_name = "braintree-core"
project.ext.group_id = "com.braintreepayments.api"
project.ext.version = rootProject.version
project.ext.pom_desc = "This is Braintree\'s Android SDK. Integrate this library to accept payments in your Android app."

apply from: rootProject.file("gradle/gradle-publish.gradle")

// endregion
