plugins {
    alias libs.plugins.android.application
    alias libs.plugins.androidx.safeargs
    alias libs.plugins.kotlin.android
}

android {
    compileSdk rootProject.compileSdkVersion

    defaultConfig {
        applicationId "com.braintreepayments.demo"
        minSdkVersion 23
        targetSdkVersion rootProject.targetSdkVersion
        versionCode rootProject.versionCode
        versionName rootProject.versionName

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        multiDexEnabled true
    }

    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
    }

    lintOptions {
        disable 'IconMissingDensityFolder'
        warning 'InvalidPackage'
        warning 'GradleCompatible'
        textReport true
        textOutput 'stdout'
    }

    packagingOptions {
        exclude 'META-INF/maven/com.google.guava/guava/pom.properties'
        exclude 'META-INF/maven/com.google.guava/guava/pom.xml'
    }

    buildFeatures {
        dataBinding = true
        compose = true
    }

    composeOptions {
        kotlinCompilerExtensionVersion = "1.5.3"
    }

    compileOptions {
        sourceCompatibility versions.javaSourceCompatibility
        targetCompatibility versions.javaTargetCompatibility
    }

    namespace 'com.braintreepayments.demo'
}

dependencies {
    implementation libs.kotlin.stdlib

    implementation(libs.retrofit)
    implementation(libs.retrofit.gson)

    implementation project(':AmericanExpress')
    implementation project(':Card')
    implementation project(':GooglePay')
    implementation project(':LocalPayment')
    implementation project(':PayPal')
    implementation project(':DataCollector')
    implementation project(':PayPalMessaging')
    implementation project(':ShopperInsights')
    implementation project(':SEPADirectDebit')
    implementation project(':ThreeDSecure')
    implementation project(':Venmo')
    implementation project(':VisaCheckout')

    implementation libs.gson
    implementation libs.eventbus
    implementation libs.androidx.appcompat
    implementation libs.androidx.preference
    implementation libs.material
    implementation libs.androidx.cardview
    implementation libs.androidx.fragment
    implementation libs.androidx.navigation.fragment
    implementation libs.androidx.navigation.ui
    implementation libs.androidx.legacy.support.v4
    implementation libs.androidx.lifecycle.extensions
    implementation libs.androidx.lifecycle.viewmodel.ktx
    implementation libs.bt.card.form

    def composeBom = platform(libs.androidx.compose.bom)
    implementation composeBom
    implementation libs.androidx.material3

    debugImplementation libs.leakcanary

    androidTestImplementation libs.device.automator
    androidTestImplementation project(':TestUtils')

    testImplementation libs.junit
}

task demoApkSize {
  group 'Braintree'
  description 'Prints the current size of the Demo apk'

  def apkDir = fileTree('./build/outputs/apk')
  def apks = apkDir.matching {
    include '*.apk'
    exclude '*unaligned*'
  }
  apks.visit { apk ->
    def apkName = apk.getName()
    def mb = apk.getSize() / 1024 / 1000
    mb = mb.setScale(2, BigDecimal.ROUND_UP)
    println "Size of ${apkName} is ${mb} MB"
  }
}

project.tasks.findAll {
  if (it.name.startsWith('assemble')) {
    it.finalizedBy demoApkSize
  }
}
